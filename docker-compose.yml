services:
  db:
    container_name: postgres-spring-boot-2
    image: postgres:latest
    environment:
      POSTGRES_USER: UserMeterReading
      POSTGRES_PASSWORD: password
      GDATA: /data/postgres
    volumes:
      - db:/data/postgres
    ports:
      - "5433:5432"
    networks:
      - db
    restart: unless-stopped

networks:
  db:
    driver: bridge
volumes:
  db:

#version: "3.9"  # Compose file format version
#
#services:       # Define all containers here
#  app:          # 1st service (Spring Boot app)
#    build: .    # Build from current directory (Dockerfile required)
#    ports:
#      - "8080:8080"   # Expose container port 8080 to localhost:8080
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/mydb
#      SPRING_DATASOURCE_USERNAME: user
#      SPRING_DATASOURCE_PASSWORD: pass
#    depends_on:
#      - db            # app waits for db to be ready
#
#  db:           # 2nd service (Database)
#    image: postgres:15-alpine   # Use official Postgres image
#    restart: always
#    environment:
#      POSTGRES_USER: user
#      POSTGRES_PASSWORD: pass
#      POSTGRES_DB: mydb
#    volumes:
#      - db-data:/var/lib/postgresql/data  # persist database data
#
#volumes:        # Persistent storage
#  db-data:

#  ---EXPLANATION OF EACH PART---
#
#  Version
#  -Tells Docker which Compose syntax version is used.
#  -"3.x" is standard for modern Docker.
#
#  Services
#  -Defines containers.
#  -Each service = 1 container.
#  -Example: app (Spring Boot), db (Postgres).
#
#  build vs image
#  -build: . → Build an image from your Dockerfile (used for your own app).
#  -image: postgres:15-alpine → Pull an image from Docker Hub (ready-to-use).
#
#  ports
#  -Maps container ports to host machine.
#  -"8080:8080" → host port 8080 → container port 8080.
#
#  environment
#  -Set environment variables for the container (like DB credentials).
#
#  depends_on
#  -Ensures one service starts before another (e.g., DB before app).
#
#  volumes
#  -Persist data outside the container (so it survives restarts).